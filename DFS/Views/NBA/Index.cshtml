@using DFS.UI.Common;
@model DFS.UI.Models.NBAPlayerViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="card no-border col-md-12">
    <div class="card-header">
        Games Today
    </div>
    <div class="card-body form-group row col-md-12">
        <div class="row col-md-12">
            <div class="col-md-12">
                <label class="col-md-4">
                    Game Date
                </label>
                <input type="text" id="datepicker" />
                <span class="fa fa-calendar-alt fa-cal"></span>
            </div>
        </div>
    </div>
    <div class="col-md-12 gamepicker" id="gamesList">
        <h6 class="text-left">Filter Teams</h6>
        <div class="cardAll pull-left">
            <button class="btn-primary">
                All
                <i class="fas fa-check"></i>
            </button>
        </div>
    </div>
</div>
<partial name="_NBACourtPartial" />
<div class="card no-border col-md-12">
    <div class="row">
        <div class="card-header">
            Player Stats
        </div>
        <div class="contianer col-md-12">
            <div class="card-body">
                <table id="jqGrid"></table>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        var date = $("#datepicker");
        var gamesList = $("#gamesList");
        var court = $("#NBACourt");
        var team1Inactive = $("#T1_InactiveList")
        var team2Inactive = $("#T2_InactiveList")
        var nbaPositions = {}

        date.datepicker();
        $(".fa-cal").on("click", function () {
            date.datepicker("show");
        })

        date.change(function (e) {
            params = {}
            params.date = $(this).val()

            $.ajax({
                url: "/NBA/GetGamesForDate",
                type: "POST",
                data: params,
                success: function (data) {
                    PopulateGames(JSON.parse(data));
                },
                error: function () {
                }
            });

        });

        function PopulateGames(data) {
            gamesList.find('.card').remove();
            $.each(data, function (i, value) {
                gamesList.append($("<div class='card'><button class='TeamName'>" + value.HomeTeam + "</button><button class='TeamName'>" + value.AwayTeam + "</button>"));
            });
        };

        gamesList.on("click", '.TeamName', function (e) {
            console.log($(this).text);
            params = {};
            params.date = date.val();
            params.team = $(this).text();
            params.opp = $(this).parent().text().replace($(this).text(), "");

            $.ajax({
                url: "/NBA/GetGameStatsByDate",
                type: "POST",
                data: params,
                success: function (data) {                    
                    clearChartDetials();
                    $("#jqGrid").trigger("reloadGrid");
                    
                    tabulate();
                    fillChartDetails(data.activePlayerList);
                    fillInactivePlayers(data.inactivePlayersList, params.team);
                },
                error: function () {

                }
            });
        });


        var tabulate = function () {
            //console.log(playerData);
            //$("#jqGrid").clearGridData();
            //$("#jqGrid").jqGrid('setGridParam', { data: playerData });
            //$("#jqGrid").trigger("reloadGrid");

            var gridColNames = ["Name", "Team", "Pos", "Usage", "Mins", "Def.R", "Off.R", "Height", "FG", "FGA",
                "3P", "3PA", "FT", "ORB", "DRB", "TRB", "TRB %", "AST", "STL", "BLK", "TOV", "PF", "PTS"]

            var Columnmodel = [
                { name: 'name', index: 'Name', width: 150, align: 'center', editable: false },
                { name: 'team', index: 'Team', width: 50, align: 'center', editable: false },
                { name: 'multiPosition', index: 'MultiPosition', width: 50, align: 'center', editable: false },
                { name: 'usage', index: 'Usage', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'minutesPlayed', index: 'MinutesPlayed', width: 100, align: 'center', editable: false, sortable: true  },
                { name: 'defensiveRating', index: 'DefensiveRating', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'offensiveRating', index: 'OffensiveRating', width: 50, align: 'center', editable: false, sortable: true  },                
                { name: 'height', index: 'Height', width: 100, align: 'center', editable: false, sortable: true, },
                { name: 'fieldGoal', index: 'FieldGoal', width: 50, align: 'center', editable: false, sortable: true },
                { name: 'fieldGoalAttempted', index: 'FieldGoalAttempted', width: 50, align: 'center', editable: false, sortable: true },
                { name: 'threePointer', index: 'ThreePointer', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'threePointerAttempted', index: 'ThreePointerAttempted', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'freeThrow', index: 'FreeThrow', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'offensiveRebound', index: 'OffensiveRebound', width: 50, align: 'center', editable: false },
                { name: 'defensiveRebound', index: 'DefensiveRebound', width: 50, align: 'center', editable: false },
                { name: 'totalRebound', index: 'TotalRebound', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'totalReboundPercentage', index: 'TotalReboundPercentage', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'assists', index: 'Assists', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'steals', index: 'Steals', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'blocks', index: 'Blocks', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'turnovers', index: 'Turnovers', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'fouls', index: 'Fouls', width: 50, align: 'center', editable: false, sortable: true  },
                { name: 'points', index: 'Points', width: 50, align: 'center', editable: false, sortable: true  }
            ];

            $("#jqGrid").jqGrid({
                url: "/NBA/GetGridData",                
                colNames: gridColNames,
                colModel: Columnmodel,
                pager: '#grdEmail',                
                datatype: "json",
                gridview: true,
                loadonce: false,
                height: "auto",  
                repeatitems: false,
                jsonReader: {
                   root: "data",
                    repeatitems: false,
                },
                //loadComplete: function () {
                //    return false;                    
                //}
            });
            
        };


        var fillChartDetails = function (data) {
            var primaryTeam = data[0].team;
            var id = 1;
            nbaPositions = {};

            $.each(data, function (i, value) {
                var tableColumns = ["Min", "Def", "Off", "Usa", "Eff"]

                if (value.team === primaryTeam) {
                    if (String(nbaPositions[value.position]) === "undefined") {
                        nbaPositions[value.position] = value.name;

                        // Set Player Name
                        court.find("#" + value.position + "_" + String(id) + "_L").text(value.name + "(" + String(value.height) + ")");

                        // Set values in the court tables
                        $.each(tableColumns, function (t, v) {
                            tableColumns[t] = value.position + "_" + String(id) + "_" + v;
                        });

                        // Set Player Details
                        court.find("#" + tableColumns[0]).text(value.minutesPlayed);
                        court.find("#" + tableColumns[1]).text(value.defensiveRating);
                        court.find("#" + tableColumns[2]).text(value.offensiveRating);
                        court.find("#" + tableColumns[3]).text(value.usage);
                        court.find("#" + tableColumns[4]).text(value.points);
                    }

                }
                else {
                    nbaPositions = {};
                    id = 2;
                    primaryTeam = value.team;
                }
            });
        };

        fillInactivePlayers = function (data, team) {
            team1Inactive.find("label").remove();
            team2Inactive.find("label").remove();

            $.each(data, function (i, value) {
                var text = $("<label>" + value.name + " " + value.position  + "</label>")
                if (value.team == team) {
                    team1Inactive.append(text);
                }
                else {
                    team2Inactive.append(text);
                }
            });
        }


        var clearChartDetials = function () {
            var tableColumns = ["Min", "Def", "Off", "Usa", "Eff"];
            var positions = ["PG", "SG", "SF", "PF", "C"];
            var idList = [];

            $.each(tableColumns, function (i, tblV) {
                $.each(positions, function (i, data) {
                    // Player table Reset
                    idList = idList.concat("[id^=" + data + "_1_" + tblV + "]");
                    idList = idList.concat("[id^=" + data + "_2_" + tblV + "]");
                    // PlayerName Reset
                    idList = idList.concat("[id^=" + data + "_1_L]");
                    idList = idList.concat("[id^=" + data + "_2_L]");
                });
            });

            court.find(String(idList)).text("")
        }
        clearChartDetials();

        date.val("2019-01-11");
        date.trigger("change");
        //tabulate();
    });
</script>
