#pragma checksum "D:\DFS Website\DFS\DFS\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c830cf11b043394e1a9290e6b2d037355cd4ce77"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\DFS Website\DFS\DFS\Views\_ViewImports.cshtml"
using DFS;

#line default
#line hidden
#line 2 "D:\DFS Website\DFS\DFS\Views\_ViewImports.cshtml"
using DFS.Models;

#line default
#line hidden
#line 1 "D:\DFS Website\DFS\DFS\Views\Home\Index.cshtml"
using DFS.UI.Common;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c830cf11b043394e1a9290e6b2d037355cd4ce77", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b389b029d588de670fa900657428202fd15f9a9c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DFS.UI.Models.NBAPlayerViewModel>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "D:\DFS Website\DFS\DFS\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(109, 310, true);
            WriteLiteral(@"<div class=""col-md-12"">
    <h1 class=""display-4"">Welcome</h1>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>

    <div class=""card col-md-12"">
        <div class=""card-header text-left"">
            Filter Games
        </div>
        ");
            EndContext();
            BeginContext(419, 662, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c830cf11b043394e1a9290e6b2d037355cd4ce773798", async() => {
                BeginContext(425, 649, true);
                WriteLiteral(@"
            <div class=""card-body form-group row col-md-12"">
                <div class=""col-md-12"">
                    <label class=""col-md-2"">
                        Game Date
                    </label>
                    <input type=""text"" id=""datepicker"" />
                    <span class=""fa fa-calendar-alt fa-cal""></span>
                </div>
                <div class=""col-md-12"">
                    <label class=""col-md-2"">
                        Days Before
                    </label>
                    <input type=""text"" id=""daysBefore"" class=""numeric"" />
                </div>
            </div>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1081, 4798, true);
            WriteLiteral(@"
        <div class=""card-footer"">
            <input type=""button"" value=""Search"" id=""GetGames"" />
        </div>
    </div>

    <div class=""card row"">
        <div class=""contianer col-md-12"">
            <div class=""row"">
                <div class=""panel panel-default"">
                    <div class=""panel-heading bg-light-color"" style=""width:1000px;"">
                        <div class=""panel-body no-padding"" style=""width:1000px;"">
                            <table id=""jqGrid"" style=""width:1000px;""></table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>

<script>
    $(function () {
        aggregrateColumns = [""Name"", ""Position"", ""GameDate"", ""Team""];
        $('#datepicker').datepicker();
        $("".fa-cal"").on(""click"", function () {
            $(""#datepicker"").datepicker(""show"");
        })
        var datGlobal = [];
        function GetGameResults() {
            var params = {");
            WriteLiteral(@"};
            params[""date""] = $(""#datepicker"").val();
            params[""daysBefore""] = $(""#daysBefore"").val()
            $.ajax({
                url: ""/Home/GetGameResults"",
                type: ""POST"",
                data: params,
                success: function (data) {
                    datGlobal = data;
                    d3.csv(JSON.parse(data), DrawGraph(JSON.parse(data)));
                },
                error: function () {
                    alert(""Error"")
                }
            });
        }

        $(""#GetGames"").on(""click"", function () {
            GetGameResults();
        });

        function DrawGraph(data) {
            
            function newRowsAggregrate(data, column) {
                var combined = data;
                combined = d3.nest().key(
                    function (d) {
                        keys = """"
                        for (x in column) {
                            keys = keys + ':' + d[column[x]];
             ");
            WriteLiteral(@"           };
                        return keys;
                    }
                ).rollup(function (d) {
                    return d3.sum(d, function (g) { return g.Count; });
                }).entries(combined)
                    .map(function (d) {
                        return {
                            ""Keys"": d.key, 'Values': d.values
                        }
                    });

                newMappedData = [];
                $.each(combined, function (key, data) {
                    newValue = []
                    newValue[""SiteName""] = combined[key].Keys;

                    if (""object"" === typeof (data.Values)) {
                        $.each(data.Keys, function (each, data) {
                            newValue[""WaitlistCategoryCD""] = data.key;
                            newValue[""Count""] = data.Values;
                        });
                    }
                    else {
                        var listValues = newValue[""SiteName""].spli");
            WriteLiteral(@"t(':');
                        newValue[""SiteName""] = listValues[1];
                        for (var i = 2; i < listValues.length; i++) {
                            newValue[aggregrateColumns[i - 1]] = listValues[i];
                        }

                        newValue[""Count""] = data.Values;
                    }
                    newMappedData.push(newValue);
                });

                tabulate(newMappedData, column);
            };
            newRowsAggregrate(data, aggregrateColumns);
        }


        var tabulate = function (data, columns) {
            $(""#jqGrid"").clearGridData();
            console.log(data);

            $(""#jqGrid"").jqGrid('setGridParam', { data: data });
            $(""#jqGrid"").trigger(""reloadGrid"");

            var Columnmodel = [
                { name: 'Name', index: 'Name', width: 1000, align: 'center', editable: false },
                { name: 'Position', index: 'Position', width: 50, align: 'center', editable: false },
");
            WriteLiteral(@"                { name: 'GameDate', index: 'GameDate', width: 100, align: 'center', editable: false },
                { name: 'Team', index: 'Team', width: 100, align: 'center', editable: false },
            ];

            $(""#jqGrid"").jqGrid({
                colModel: Columnmodel,
                pager: '#grdEmail',
                datatype: ""jsonstring"",
                datastr: data,
                jsonReader: { repeatitems: false },
                rowNum: 2,
                subGrid: false,
                viewrecords: true,
                height: ""auto"",
                ignoreCase: true
            });
        };

        GetGameResults();

    });
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DFS.UI.Models.NBAPlayerViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
