allPlayers = unique(NBAAllData$PlayerName)
for (player in allPlayers) {
## Get Playerdata
subsetPlayerData = subset(NBAAllData, NBAAllData$PlayerName == player)
DefensiveStatsMaxDate = max(as.Date(subset(OffensiveStats, OffensiveStats$PlayerName == player)$Date ), na.rm =  TRUE)
if (nrow(subsetPlayerData) == 0)
{
next;
}
DateLevels = as.factor(unique(subsetPlayerData[order(subsetPlayerData$Date , decreasing = FALSE ),]$Date))
DateLevels = DateLevels[as.Date(DateLevels) > DefensiveStatsMaxDate]
if (length(DateLevels) == 0){
next;
}
# Add current Date
# DateLevels = factor(c(levels(DateLevels),substring(Sys.time(),0,10)))
print(player)
## Iterate over date
for (date in 2:length(DateLevels)){
# Iterate over each date
temp = OffensiveStatsNew[1,]
subsetPlayerData = subset(NBAAllData, NBAAllData$PlayerName == player
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date])
& as.Date(NBAAllData$Date) > (as.Date(DateLevels[date]) - 300)
)
subsetPlayerData = subsetPlayerData[order(subsetPlayerData$Date , decreasing = TRUE ),]
if(nrow(subsetPlayerData) > 50){
subsetPlayerData = subsetPlayerData[0:50,]
}
currentGame = subset(NBAAllData, NBAAllData$PlayerName == player
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date]))
if (nrow(currentGame) == 0 ){
next
}
temp$Date = DateLevels[date]
temp$PlayerName = player
temp$Pos = as.character(subsetPlayerData$Position[1])
temp$Tm = as.character(subsetPlayerData$Team[1])
temp$Opp = as.character(currentGame$Opp[1])
temp$MP = mean(as.numeric(subsetPlayerData$MP))/60
if (currentGame$blank == '@' | currentGame$blank == 'N'){
temp$Home = 0
}
else{
temp$Home = 1
}
#### How good the player is last 30 days
for (column in 10:(length(colnames(temp)) - 3) ){
temp[, colnames(temp)[column]]  = mean(subsetPlayerData[, colnames(temp)[column]])
}
### Opposing Team stats
currentOppPlayers = unique(subset(NBAAllData, NBAAllData$Team == currentGame$Opp
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date]))$PlayerName)
currentOppPlayers = subset(NBAAllData, NBAAllData$PlayerName %in% currentOppPlayers
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date])
& as.Date(NBAAllData$Date) > (as.Date(DateLevels[date]) - 300))
currentOppPlayers = currentOppPlayers[order(currentOppPlayers$Date , decreasing = TRUE ),]
if(nrow(currentOppPlayers) > 100){
currentOppPlayers = currentOppPlayers[0:100,]
}
temp$OppTeamDRTGPer = mean(currentOppPlayers$DRTGPer)
temp$OppTeamORTGPer = mean(currentOppPlayers$ORTGPer)
temp$OppPosDRTPer = mean(currentOppPlayers[currentOppPlayers$Position %in% currentGame$Position,]$DRTGPer)
temp$DKP = currentGame$DKP[1]
temp$TotalPoints = currentGame$TotalPoints[1]
OffensiveStatsNew = rbind(temp, OffensiveStatsNew)
}
## Iterate over date
}
OffensiveStatsNew[is.na(OffensiveStatsNew)] = 0
OffensiveStatsNew[is.null(OffensiveStatsNew)] = 0
#######################################################################
#######################################################################
################## Player Shot Log ####################################
ShotPlayerLogStats = ShotPlayerLog[0,]
allPlayers = unique(ShotPlayerLog$PlayerName)
player
#######################################################################
#######################################################################
################## Player Shot Log ####################################
ShotPlayerLogStats = ShotPlayerLog[0,]
allPlayers = unique(ShotPlayerLog$PlayerName)
for (player in allPlayers) {
## Get Playerdata
subsetPlayerData = subset(ShotPlayerLog, ShotPlayerLog$PlayerName == player)
DefensiveStatsMaxDate = max(as.Date(subset(ShotPlayerLogStats, ShotPlayerLogStats$PlayerName == player)$GameDate ), na.rm =  TRUE)
if (nrow(subsetPlayerData) == 0)
{
next;
}
DateLevels = as.factor(unique(subsetPlayerData[order(subsetPlayerData$GameDate , decreasing = FALSE ),]$GameDate))
DateLevels = DateLevels[as.Date(DateLevels) > DefensiveStatsMaxDate]
if (length(DateLevels) == 0){
next;
}
# Add current Date
print(player)
## Iterate over date
for (date in 2:length(DateLevels)){
# Iterate over each date
temp = ShotPlayerLog[1,]
subsetPlayerData = subset(ShotPlayerLog, ShotPlayerLog$PlayerName == player
& as.Date(ShotPlayerLog$GameDate) < as.Date(DateLevels[date])
& as.Date(ShotPlayerLog$GameDate) > (as.Date(DateLevels[date]) - 30)
)
subsetPlayerData = subsetPlayerData[order(subsetPlayerData$GameDate , decreasing = TRUE ),]
if(nrow(subsetPlayerData) > 4){
subsetPlayerData = subsetPlayerData[0:4,]
}
currentGame = subset(ShotPlayerLog, ShotPlayerLog$PlayerName == player
& as.Date(ShotPlayerLog$GameDate) == as.Date(DateLevels[date]))
if (nrow(currentGame) == 0 ){
next
}
temp$GameDate = DateLevels[date]
temp$PlayerName = player
#### How good the player is last 30 days
for (column in 3:(length(colnames(temp))) ){
temp[, colnames(temp)[column]]  = mean(subsetPlayerData[, colnames(temp)[column]])
}
ShotPlayerLogStats = rbind(temp, ShotPlayerLogStats)
}
## Iterate over date
}
library(Hmisc)
library(corrplot)
library(brnn)
library(h2o)
library(randomForest)
library(Matrix)
# library(xgboost)
library(stringdist)
library(varhandle)
library(tidyr)
require(devtools)
# library(mxnet)
setwd("D:/DFS Website/DFS/R Files")
source('NBA_getDBData.R')
NBATableData = NBATableData[,c("PlayerName","Position","Date","Team","blank","Opp","blank2","MP",
"FG","FGA","FGper","ThreeP","ThreePA","ThreePper",
"FT","FTA","FTper","ORB","DRB","TRB","AST","STL",
"BLK","TOV","PF","PTS","GmSc",
"TSPer","eFGPer","ORBPer","DRBPer","TRBPer","ASTPer",
"STLPer","BLKPer","TOVPer","USGPer","ORTGPer","DRTGPer")]
NBAAllData = NBATableData
OffensiveStats = read.csv('OffensiveStats_All.csv')
DefensiveStats = read.csv('DefensiveStats_All.csv')
ShotTeamLogStats = read.csv('ShotTeamLogStats_All.csv')
ShotPlayerLogStats = read.csv('ShotPlayerLogStats_All.csv')
OffensiveStats = subset(OffensiveStats, select = -X.1)
DefensiveStats = subset(DefensiveStats, select = -X.1)
######################################################
############### Team Defensive stats ######################
######################################################
DefensiveStatsNew = DefensiveStats[0,]
PositionsAll = unique(NBAAllData$Position)
Teams = unique(NBAAllData$Team)
### Get Defensive stats for each team
for (eachTeam in Teams) {
# Iterate over each team
subsetTeamData = subset(NBAAllData, NBAAllData$Team == eachTeam)
DefensiveStatsMaxDate = max(as.Date(subset(DefensiveStats, DefensiveStats$Tm == eachTeam)$Date ), na.rm =  TRUE)
if (nrow(subsetTeamData) == 0)
{
next;
}
DateLevels = as.factor(unique(subsetTeamData[order(subsetTeamData$Date , decreasing = FALSE ),]$Date))
DateLevels = DateLevels[as.Date(DateLevels) > DefensiveStatsMaxDate]
if (length(DateLevels) == 0){
next;
}
#############################
### Position######
## Iterate over date
for (date in 1:length(DateLevels)){
print(paste("Team = ", eachTeam, " level " ,length(DateLevels)/date))
for (pos in as.factor(PositionsAll) ){
# Iterate over each date
temp = DefensiveStatsNew[1,]
## Make sure do not include this date but eveytyhing before.
subsetTeamData = subset(NBAAllData, NBAAllData$Team == eachTeam
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date]) &
as.Date(NBAAllData$Date) > (as.Date(DateLevels[date]) - 300) &
as.character(NBAAllData$Position) == pos )
subsetTeamData = subsetTeamData[order(subsetTeamData$Date , decreasing = TRUE ),]
currentGame = subset(NBAAllData, NBAAllData$Team == eachTeam
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date]) &
as.character(NBAAllData$Position) == pos )
subsetTeamData = subsetTeamData[subsetTeamData$PlayerName %in% currentGame$PlayerName,]
if(nrow(subsetTeamData) > 50){
subsetTeamData = subsetTeamData[0:50,]
}
if(nrow(subsetTeamData) == 0){
next;
}
temp$Date = DateLevels[date]
temp$Tm = eachTeam
temp$Pos = pos
#### How does team perform in this position historically
for (column in 4:31){
print(colnames(temp)[column])
temp[, colnames(temp)[column]]  = mean(subsetTeamData[, colnames(temp)[column]])
}
### Get Opposition Players in the game
OppPositionPlayers = unique(subset(NBAAllData, NBAAllData$Team == currentGame$Opp[1]
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date])
& as.character(NBAAllData$Position) == pos)$PlayerName)
### Get Opposition Players and their dates to find all games these players particiated in
OppositionTeams = unique(subset(NBAAllData, NBAAllData$PlayerName %in% OppPositionPlayers)$Opp)
OppositionDates = unique(subset(NBAAllData, NBAAllData$PlayerName %in% OppPositionPlayers)$Date)
## Make sure do not include this date but eveytyhing before.
subsetOppData = subset(NBAAllData, NBAAllData$Team %in% unique(OppositionTeams)
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date])
& as.Date(NBAAllData$Date) %in% (as.Date(OppositionDates))
& as.character(NBAAllData$Position) == pos)
subsetOppData = subsetOppData[order(subsetOppData$Date , decreasing = TRUE ),]
if(nrow(subsetOppData) > 50){
subsetOppData = subsetOppData[0:50,]
}
#### How many points have been allowed
for (column in 31:length(colnames(temp)) ){
#print(colnames(temp)[column])
col = gsub('Opp', '',  colnames(temp)[column], perl = TRUE)
temp[, colnames(temp)[column]]  = mean(subsetOppData[, col])
}
temp$Date = DateLevels[date]
DefensiveStatsNew = rbind(temp, DefensiveStatsNew)
}
}
}
######################################################
############### Player stats ######################
######################################################
######### Offensive Stats
OffensiveStatsNew = data.frame(matrix(ncol=38))
colnames(OffensiveStatsNew) = c("PlayerName", "Tm", "Pos" , "Date", "Opp",  "TotalPoints","DKP",
"Home","MP",
"FG","FGA","ThreeP","ThreePA","FT","FTA","ORB","DRB",
"TRB","AST","STL","BLK","TOV","PF","TSPer","eFGPer","ORBPer",
"DRBPer","TRBPer","ASTPer","STLPer","BLKPer","TOVPer","USGPer","ORTGPer","DRTGPer",
"OppPosDRTPer", "OppTeamDRTGPer", "OppTeamORTGPer")
NBAAllData$TotalPoints = NBAAllData$PTS
NBAAllData$DKP = NBAAllData$FT * 1 + (NBAAllData$FG-NBAAllData$ThreeP) * 2 + NBAAllData$ThreeP * 3.5 + NBAAllData$AST * 1.5 +
NBAAllData$TRB * 1.25 + NBAAllData$STL * 2 + NBAAllData$BLK * 2 - NBAAllData$TOV * 0.5
allPlayers = unique(NBAAllData$PlayerName)
for (player in allPlayers) {
## Get Playerdata
subsetPlayerData = subset(NBAAllData, NBAAllData$PlayerName == player)
DefensiveStatsMaxDate = max(as.Date(subset(OffensiveStats, OffensiveStats$PlayerName == player)$Date ), na.rm =  TRUE)
if (nrow(subsetPlayerData) == 0)
{
next;
}
DateLevels = as.factor(unique(subsetPlayerData[order(subsetPlayerData$Date , decreasing = FALSE ),]$Date))
DateLevels = DateLevels[as.Date(DateLevels) > DefensiveStatsMaxDate]
if (length(DateLevels) == 0){
next;
}
# Add current Date
# DateLevels = factor(c(levels(DateLevels),substring(Sys.time(),0,10)))
print(player)
## Iterate over date
for (date in 2:length(DateLevels)){
# Iterate over each date
temp = OffensiveStatsNew[1,]
subsetPlayerData = subset(NBAAllData, NBAAllData$PlayerName == player
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date])
& as.Date(NBAAllData$Date) > (as.Date(DateLevels[date]) - 300)
)
subsetPlayerData = subsetPlayerData[order(subsetPlayerData$Date , decreasing = TRUE ),]
if(nrow(subsetPlayerData) > 50){
subsetPlayerData = subsetPlayerData[0:50,]
}
currentGame = subset(NBAAllData, NBAAllData$PlayerName == player
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date]))
if (nrow(currentGame) == 0 ){
next
}
temp$Date = DateLevels[date]
temp$PlayerName = player
temp$Pos = as.character(subsetPlayerData$Position[1])
temp$Tm = as.character(subsetPlayerData$Team[1])
temp$Opp = as.character(currentGame$Opp[1])
temp$MP = mean(as.numeric(subsetPlayerData$MP))/60
if (currentGame$blank == '@' | currentGame$blank == 'N'){
temp$Home = 0
}
else{
temp$Home = 1
}
#### How good the player is last 30 days
for (column in 10:(length(colnames(temp)) - 3) ){
temp[, colnames(temp)[column]]  = mean(subsetPlayerData[, colnames(temp)[column]])
}
### Opposing Team stats
currentOppPlayers = unique(subset(NBAAllData, NBAAllData$Team == currentGame$Opp
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date]))$PlayerName)
currentOppPlayers = subset(NBAAllData, NBAAllData$PlayerName %in% currentOppPlayers
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date])
& as.Date(NBAAllData$Date) > (as.Date(DateLevels[date]) - 300))
currentOppPlayers = currentOppPlayers[order(currentOppPlayers$Date , decreasing = TRUE ),]
if(nrow(currentOppPlayers) > 100){
currentOppPlayers = currentOppPlayers[0:100,]
}
temp$OppTeamDRTGPer = mean(currentOppPlayers$DRTGPer)
temp$OppTeamORTGPer = mean(currentOppPlayers$ORTGPer)
temp$OppPosDRTPer = mean(currentOppPlayers[currentOppPlayers$Position %in% currentGame$Position,]$DRTGPer)
temp$DKP = currentGame$DKP[1]
temp$TotalPoints = currentGame$TotalPoints[1]
OffensiveStatsNew = rbind(temp, OffensiveStatsNew)
}
## Iterate over date
}
OffensiveStatsNew[is.na(OffensiveStatsNew)] = 0
OffensiveStatsNew[is.null(OffensiveStatsNew)] = 0
source('D:/NBA/NBA_Spread_Current.R')
source('D:/NBA/NBA_Spread_Current.R')
library(Hmisc)
library(corrplot)
library(brnn)
library(h2o)
library(randomForest)
library(Matrix)
# library(xgboost)
library(stringdist)
library(varhandle)
library(tidyr)
require(devtools)
# library(mxnet)
setwd("D:/DFS Website/DFS/R Files")
source('NBA_getDBData.R')
NBATableData = NBATableData[,c("PlayerName","Position","Date","Team","blank","Opp","blank2","MP",
"FG","FGA","FGper","ThreeP","ThreePA","ThreePper",
"FT","FTA","FTper","ORB","DRB","TRB","AST","STL",
"BLK","TOV","PF","PTS","GmSc",
"TSPer","eFGPer","ORBPer","DRBPer","TRBPer","ASTPer",
"STLPer","BLKPer","TOVPer","USGPer","ORTGPer","DRTGPer")]
NBAAllData = NBATableData
OffensiveStats = read.csv('OffensiveStats_All.csv')
DefensiveStats = read.csv('DefensiveStats_All.csv')
ShotTeamLogStats = read.csv('ShotTeamLogStats_All.csv')
ShotPlayerLogStats = read.csv('ShotPlayerLogStats_All.csv')
OffensiveStats = subset(OffensiveStats, select = -X.1)
DefensiveStats = subset(DefensiveStats, select = -X.1)
######################################################
############### Team Defensive stats ######################
######################################################
DefensiveStatsNew = DefensiveStats[0,]
PositionsAll = unique(NBAAllData$Position)
Teams = unique(NBAAllData$Team)
### Get Defensive stats for each team
for (eachTeam in Teams) {
# Iterate over each team
subsetTeamData = subset(NBAAllData, NBAAllData$Team == eachTeam)
DefensiveStatsMaxDate = max(as.Date(subset(DefensiveStats, DefensiveStats$Tm == eachTeam)$Date ), na.rm =  TRUE)
if (nrow(subsetTeamData) == 0)
{
next;
}
DateLevels = as.factor(unique(subsetTeamData[order(subsetTeamData$Date , decreasing = FALSE ),]$Date))
DateLevels = DateLevels[as.Date(DateLevels) > DefensiveStatsMaxDate]
if (length(DateLevels) == 0){
next;
}
#############################
### Position######
## Iterate over date
for (date in 1:length(DateLevels)){
print(paste("Team = ", eachTeam, " level " ,length(DateLevels)/date))
for (pos in as.factor(PositionsAll) ){
# Iterate over each date
temp = DefensiveStatsNew[1,]
## Make sure do not include this date but eveytyhing before.
subsetTeamData = subset(NBAAllData, NBAAllData$Team == eachTeam
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date]) &
as.Date(NBAAllData$Date) > (as.Date(DateLevels[date]) - 300) &
as.character(NBAAllData$Position) == pos )
subsetTeamData = subsetTeamData[order(subsetTeamData$Date , decreasing = TRUE ),]
currentGame = subset(NBAAllData, NBAAllData$Team == eachTeam
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date]) &
as.character(NBAAllData$Position) == pos )
subsetTeamData = subsetTeamData[subsetTeamData$PlayerName %in% currentGame$PlayerName,]
if(nrow(subsetTeamData) > 50){
subsetTeamData = subsetTeamData[0:50,]
}
if(nrow(subsetTeamData) == 0){
next;
}
temp$Date = DateLevels[date]
temp$Tm = eachTeam
temp$Pos = pos
#### How does team perform in this position historically
for (column in 4:31){
print(colnames(temp)[column])
temp[, colnames(temp)[column]]  = mean(subsetTeamData[, colnames(temp)[column]])
}
### Get Opposition Players in the game
OppPositionPlayers = unique(subset(NBAAllData, NBAAllData$Team == currentGame$Opp[1]
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date])
& as.character(NBAAllData$Position) == pos)$PlayerName)
### Get Opposition Players and their dates to find all games these players particiated in
OppositionTeams = unique(subset(NBAAllData, NBAAllData$PlayerName %in% OppPositionPlayers)$Opp)
OppositionDates = unique(subset(NBAAllData, NBAAllData$PlayerName %in% OppPositionPlayers)$Date)
## Make sure do not include this date but eveytyhing before.
subsetOppData = subset(NBAAllData, NBAAllData$Team %in% unique(OppositionTeams)
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date])
& as.Date(NBAAllData$Date) %in% (as.Date(OppositionDates))
& as.character(NBAAllData$Position) == pos)
subsetOppData = subsetOppData[order(subsetOppData$Date , decreasing = TRUE ),]
if(nrow(subsetOppData) > 50){
subsetOppData = subsetOppData[0:50,]
}
#### How many points have been allowed
for (column in 31:length(colnames(temp)) ){
#print(colnames(temp)[column])
col = gsub('Opp', '',  colnames(temp)[column], perl = TRUE)
temp[, colnames(temp)[column]]  = mean(subsetOppData[, col])
}
temp$Date = DateLevels[date]
DefensiveStatsNew = rbind(temp, DefensiveStatsNew)
}
}
}
######################################################
############### Player stats ######################
######################################################
######### Offensive Stats
OffensiveStatsNew = data.frame(matrix(ncol=38))
colnames(OffensiveStatsNew) = c("PlayerName", "Tm", "Pos" , "Date", "Opp",  "TotalPoints","DKP",
"Home","MP",
"FG","FGA","ThreeP","ThreePA","FT","FTA","ORB","DRB",
"TRB","AST","STL","BLK","TOV","PF","TSPer","eFGPer","ORBPer",
"DRBPer","TRBPer","ASTPer","STLPer","BLKPer","TOVPer","USGPer","ORTGPer","DRTGPer",
"OppPosDRTPer", "OppTeamDRTGPer", "OppTeamORTGPer")
NBAAllData$TotalPoints = NBAAllData$PTS
NBAAllData$DKP = NBAAllData$FT * 1 + (NBAAllData$FG-NBAAllData$ThreeP) * 2 + NBAAllData$ThreeP * 3.5 + NBAAllData$AST * 1.5 +
NBAAllData$TRB * 1.25 + NBAAllData$STL * 2 + NBAAllData$BLK * 2 - NBAAllData$TOV * 0.5
allPlayers = unique(NBAAllData$PlayerName)
for (player in allPlayers) {
## Get Playerdata
subsetPlayerData = subset(NBAAllData, NBAAllData$PlayerName == player)
DefensiveStatsMaxDate = max(as.Date(subset(OffensiveStats, OffensiveStats$PlayerName == player)$Date ), na.rm =  TRUE)
if (nrow(subsetPlayerData) == 0)
{
next;
}
DateLevels = as.factor(unique(subsetPlayerData[order(subsetPlayerData$Date , decreasing = FALSE ),]$Date))
DateLevels = DateLevels[as.Date(DateLevels) > DefensiveStatsMaxDate]
if (length(DateLevels) == 0){
next;
}
# Add current Date
# DateLevels = factor(c(levels(DateLevels),substring(Sys.time(),0,10)))
print(player)
## Iterate over date
for (date in 2:length(DateLevels)){
# Iterate over each date
temp = OffensiveStatsNew[1,]
subsetPlayerData = subset(NBAAllData, NBAAllData$PlayerName == player
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date])
& as.Date(NBAAllData$Date) > (as.Date(DateLevels[date]) - 300)
)
subsetPlayerData = subsetPlayerData[order(subsetPlayerData$Date , decreasing = TRUE ),]
if(nrow(subsetPlayerData) > 50){
subsetPlayerData = subsetPlayerData[0:50,]
}
currentGame = subset(NBAAllData, NBAAllData$PlayerName == player
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date]))
if (nrow(currentGame) == 0 ){
next
}
temp$Date = DateLevels[date]
temp$PlayerName = player
temp$Pos = as.character(subsetPlayerData$Position[1])
temp$Tm = as.character(subsetPlayerData$Team[1])
temp$Opp = as.character(currentGame$Opp[1])
temp$MP = mean(as.numeric(subsetPlayerData$MP))/60
if (currentGame$blank == '@' | currentGame$blank == 'N'){
temp$Home = 0
}
else{
temp$Home = 1
}
#### How good the player is last 30 days
for (column in 10:(length(colnames(temp)) - 3) ){
temp[, colnames(temp)[column]]  = mean(subsetPlayerData[, colnames(temp)[column]])
}
### Opposing Team stats
currentOppPlayers = unique(subset(NBAAllData, NBAAllData$Team == currentGame$Opp
& as.Date(NBAAllData$Date) == as.Date(DateLevels[date]))$PlayerName)
currentOppPlayers = subset(NBAAllData, NBAAllData$PlayerName %in% currentOppPlayers
& as.Date(NBAAllData$Date) < as.Date(DateLevels[date])
& as.Date(NBAAllData$Date) > (as.Date(DateLevels[date]) - 300))
currentOppPlayers = currentOppPlayers[order(currentOppPlayers$Date , decreasing = TRUE ),]
if(nrow(currentOppPlayers) > 100){
currentOppPlayers = currentOppPlayers[0:100,]
}
temp$OppTeamDRTGPer = mean(currentOppPlayers$DRTGPer)
temp$OppTeamORTGPer = mean(currentOppPlayers$ORTGPer)
temp$OppPosDRTPer = mean(currentOppPlayers[currentOppPlayers$Position %in% currentGame$Position,]$DRTGPer)
temp$DKP = currentGame$DKP[1]
temp$TotalPoints = currentGame$TotalPoints[1]
OffensiveStatsNew = rbind(temp, OffensiveStatsNew)
}
## Iterate over date
}
OffensiveStatsNew[is.na(OffensiveStatsNew)] = 0
OffensiveStatsNew[is.null(OffensiveStatsNew)] = 0
ShotTeamLogStats$X.1
source('D:/NBA/NBA_Spread_Current.R')
source('D:/NBA/NBA_Spread_Current.R')
source('D:/NBA/NBA_Spread_Current.R')
